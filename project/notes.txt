insert: 
	done

search:
	done
	
	
	
delete:
	done
	
	
freeEverything:
	done
	

unitTesting:
		problhma me:
			
			search	->   dn vgazei kapoia apotelesmata
			
			double insertion sort
			
			agnohse ta polla kena
			
			readMe
			
			tha prepei na mporei na dexetai to query file ripes
			
			
			
			
			
			sto delete_ngram tou func.c
			opws blepeis ta sxoliasa.... tsekare an exoume thema
			
			if(flagIfElementWasDeleted==1 && tempArray->array[myStack->positionsToDelete[myStack->top]].nextWordArray->position==0) {			
				//deleteArray
				//deleteArray(tempArray->array[myStack->positionsToDelete[myStack->top]].nextWordArray);			-> auto vgazei sega
				//tempArray->array[myStack->positionsToDelete[myStack->top]].nextWordArray=NULL;					-> auto vgazei sega
			
			}
		
		sto deletioSort tou auxMethods.c
		an auta mpoun mesa sth while ginetai xalia h lexh
		
		if(array_of_str->array[position].word!=NULL){				//an auta mpoun mesa sth while ginetai xalia h lexh
			free(array_of_str->array[position].word);
			array_of_str->array[position].word=NULL;
		}
		if(array_of_str->array[position].nextWordArray!=NULL){
			deleteArray(array_of_str->array[position].nextWordArray);
			//free( array_of_str->array[position].nextWordArray);
			array_of_str->array[position].nextWordArray=NULL;
		}
	
	
		sto delete array toy struct.c
		int lastElement = tempArray->position;	evala auto anti gia tempArray->length kai douleuei komple
		
		
		
		
		
		
		Delete: 
			init: test it
			Query D test			(works)
			
			init: test
			Query D test it			(works)
			
			
			init:   a
					hi
					test
					the
			Query D hi			(works)
			
					
		
		
		
		Den douleuei to :
		
		init: test it is
		Query: D test it is
		 
		 ousiastika diagrafei mono to is dld to teleutaio
		 
		 to eftiaksa ksanavazontas sto delete ngram to 
		
		
		if(flagIfElementWasDeleted==1 && tempArray->array[myStack->positionsToDelete[myStack->top]].nextWordArray->position==0) {			
				//deleteArray
				deleteArray(tempArray->array[myStack->positionsToDelete[myStack->top]].nextWordArray);			
				tempArray->array[myStack->positionsToDelete[myStack->top]].nextWordArray=NULL;					
			
			}
		
		to opoio gia kapoio logo twra douleuei
		
		
		
		
		
		
		Sumperasma:
			Sta test douleuoun ola
			insert, delete douleuoun komple
			paw sth search
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		
	Search:
			Eftiaksa na epistrefetai to String. Bgainei swsta. Ara ftiakse to test_search_ngram etsi wste na testareis an vrhke auto pou eprepe
			
			
			of the|university|using
			of the|these
			these
			of the
			-1
			of the|yield|using				->den vghke
			these							->den vghke
			of the|probe|these				->den vghke



			//my results
			of the|university|university|university|of the|using|using 
			of the|these|of the|of the|of the 
			these 
			of the|of the|of the|of the|of the|of the|of the 
			-1
			
			
			twra einai
			of the|university|using 
			of the|these 
			these 
			of the 
			-1




			prepei se mia klhsh ths search na mhn ksanaemfanistei to finalString an yparxei hdh se enan pinaka finalStringArray (done)
			eftiaksa kai allh mia synarthsh thn checkfinalStringArray kai thn testara kai douleuei komple. 
			ousiatika epistrefei 1 an vrei to string mesa sto array alliws 0
			
			
			Symperasma: gia kapoio logo dn vghkan ta:
			 
			of the|yield|using				->den vghke
			these							->den vghke
			of the|probe|these				->den vghke
				
		
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
		
		
			 	   
			 	   
this is a dog
this is a cat
the fox is bad
the car is red
this is the test
this is a	
	
	
			 	   
			 	   
Q this is a cat and a dog
Q this is not the test
A test
Q this is not the test
A fast car
D the car is red
Q the car is red and fast
F		 	   
			 	
			 	
			 	
fast -> car
test
this -> is -> a -> dog
	 		 	-> cat
	 	   -> the ->  test	
			 		 	
	
